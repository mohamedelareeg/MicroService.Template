version: '3.4'

services:
  apigateway:
    container_name: apigateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: src
      dockerfile: gateway/MicroService.Template.ApiGateway/Dockerfile
    depends_on:
      - catalog.api
      - account.api
    networks:
      - backend

  catalog.api:
    container_name: catalog.api
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: src/services/MicroService.Template.Catalog.Api/Dockerfile
    depends_on:
      - postgres
      - redis
    networks:
      - backend

  account.api:
    container_name: account.api
    image: ${DOCKER_REGISTRY-}accountapi
    build:
      context: .
      dockerfile: src/identity/MicroService.Template.Identity.Api/Dockerfile
    depends_on:
      - sqlserver
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: catalogDB  
    ports:
      - "5442:5432"
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - redis_data:/data

  sqlserver:
    image: mcr.microsoft.com/mssql/server:latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "P@ssw0rd123"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    networks:
      - backend
    volumes:
      - sqlserver_data:/var/opt/mssql

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  sqlserver_data:
